% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict}
\alias{predict}
\title{Do predictions using a fitted MOFA model}
\usage{
predict(object, views = "all", factors = "all", type = c("inRange",
  "response", "link"), include_intercept = TRUE)
}
\arguments{
\item{object}{a \code{\link{MOFAmodel}} object.}

\item{views}{character vector with the view name(s), or numeric vector with the view index(es). 
Default is "all".}

\item{factors}{character vector with the factor name(s) or numeric vector with the factor index(es). 
Default is "all".}

\item{type}{type of prediction returned, either: 
\itemize{
 \item{\strong{response}:}{ gives the response vector, the mean for Gaussian and Poisson, and success probabilities for Bernoulli.}
 \item{\strong{link}:}{ gives the linear predictions.}
 \item{\strong{inRange}:}{ rounds the fitted values of integer-valued distributions (Poisson and Bernoulli) to the next integer.
 This is the default option.}
}}

\item{include_intercept}{logical indicating whether to include the optional intercept factor for the prediction.
Default is TRUE.}
}
\value{
Returns a list with data predictions.
}
\description{
This function uses the factors and the corresponding weights to do data predictions.
}
\details{
the denoised and condensed low-dimensional representation of the data captures the main sources of heterogeneity of the data. 
These representation can be used to do predictions using the equation Y = WX. 
This is the key step underlying imputation, see \code{\link{imputeMissing}} and the Methods section of the article.
}
\examples{
# Example on the CLL data
filepath <- system.file("extdata", "CLL_model.hdf5", package = "MOFAtools")
MOFA_CLL <- loadModel(filepath)
# predict drug response data based on all factors
predict(MOFA_CLL, view="Drugs")
# predict all views based on all factors
predict(MOFA_CLL)
# predict mutation data based on all factors returning Bernoulli probabilities
predict(MOFA_CLL, view="Mutations", type="response")
# predict mutation data based on all factors returning binary classes
predict(MOFA_CLL, view="Mutations", type="inRange")

# Example on the scMT data
filepath <- system.file("extdata", "scMT_model.hdf5", package = "MOFAtools")
MOFA_scMT <- loadModel(filepath)
# predict all views based on all factors (default)
predict(MOFA_scMT)

}
